{"ast":null,"code":"import _classCallCheck from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NameForm, _React$Component);\n\n  function NameForm(props) {\n    var _this;\n\n    _classCallCheck(this, NameForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NameForm).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NameForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.onClick(this.state.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nvar MeteoPage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MeteoPage, _React$Component2);\n\n  function MeteoPage() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, MeteoPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MeteoPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      city: 'Braga',\n      forecast: [],\n      new_city: ''\n    };\n\n    _this2.getWeathe = function (_) {\n      fetch('http://localhost:4000/forecast?city=' + _this2.state.city).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this2.setState({\n          city: response.city,\n          forecast: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(MeteoPage, [{\n    key: \"getWeather\",\n    value: function getWeather(city) {\n      var _this3 = this;\n\n      fetch('http://localhost:4000/forecast?city=' + this.state.new_city).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this3.setState({\n          city: response.city,\n          forecast: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var weather = this.state.forecast;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Meteo APP \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" Weather forecast for the next 10 days in \", this.state.city), weather.map(function (_ref) {\n        var code = _ref.code,\n            date = _ref.date,\n            day = _ref.day,\n            high = _ref.high,\n            low = _ref.low,\n            text = _ref.text;\n        var low_1 = Math.round((low - 32) * 5 / 9);\n        var high_1 = Math.round((high - 32) * 5 / 9);\n        return React.createElement(\"div\", {\n          key: date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"On \", date, \" temperatures will be between \", low_1, \"\\xBAC and \", high_1, \"\\xBAC. It's expected \", text, \". \");\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(NameForm, {\n        onClick: function onClick(city) {\n          return _this4.getWeather(city);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MeteoPage;\n}(React.Component);\n\nReactDOM.render(React.createElement(MeteoPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js"],"names":["React","ReactDOM","NameForm","props","state","value","handleChange","bind","handleSubmit","event","setState","target","alert","preventDefault","onClick","Component","MeteoPage","city","forecast","new_city","getWeathe","_","fetch","then","response","json","data","catch","err","console","error","weather","map","code","date","day","high","low","text","low_1","Math","round","high_1","getWeather","render","document","getElementById"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AALiB;AAMlB;;;;iCAEYE,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAArB,OAAd;AACD;;;iCAEYI,K,EAAO;AAClBG,MAAAA,KAAK,CAAC,2BAA2B,KAAKR,KAAL,CAAWC,KAAvC,CAAL;AACAI,MAAAA,KAAK,CAACI,cAAN;AACD;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,OAAX,CAAmB,KAAKV,KAAL,CAAWC,KAA9B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAArC;AAA4C,QAAA,QAAQ,EAAE,KAAKC,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA5BoBN,KAAK,CAACe,S;;IAkCvBC,S;;;;;;;;;;;;;;;;;WAEFZ,K,GAAQ;AACVa,MAAAA,IAAI,EAAE,OADI;AAEVC,MAAAA,QAAQ,EAAE,EAFA;AAGVC,MAAAA,QAAQ,EAAE;AAHA,K;;WAeVC,S,GAAa,UAAAC,CAAC,EAAI;AAEdC,MAAAA,KAAK,CAAC,yCAAuC,OAAKlB,KAAL,CAAWa,IAAnD,CAAL,CACGM,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAC,QAAQ;AAAA,eAAI,OAAKd,QAAL,CAAc;AAAEO,UAAAA,IAAI,EAAEO,QAAQ,CAACP,IAAjB;AAAuBC,UAAAA,QAAQ,EAAEM,QAAQ,CAACE;AAA1C,SAAd,CAAJ;AAAA,OAFhB,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OAHZ;AAID,K;;;;;;;+BAfQX,I,EAAK;AAAA;;AAEdK,MAAAA,KAAK,CAAC,yCAAuC,KAAKlB,KAAL,CAAWe,QAAnD,CAAL,CACKI,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACd,QAAL,CAAc;AAAEO,UAAAA,IAAI,EAAEO,QAAQ,CAACP,IAAjB;AAAuBC,UAAAA,QAAQ,EAAEM,QAAQ,CAACE;AAA1C,SAAd,CAAJ;AAAA,OAFlB,EAGKC,KAHL,CAGW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OAHd;AAKD;;;6BAcQ;AAAA;;AACP,UAAMG,OAAO,GAAG,KAAK3B,KAAL,CAAWc,QAA3B;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADM,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAA+C,KAAKd,KAAL,CAAWa,IAA1D,CADF,EAGGc,OAAO,CAACC,GAAR,CAAY,gBAA4C;AAAA,YAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,YAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,YAAtBC,GAAsB,QAAtBA,GAAsB;AAAA,YAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,YAAXC,GAAW,QAAXA,GAAW;AAAA,YAANC,IAAM,QAANA,IAAM;AACvD,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAC,EAAL,IAAS,CAAT,GAAW,CAAtB,CAAd;AACA,YAAMK,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACL,IAAI,GAAC,EAAN,IAAU,CAAV,GAAY,CAAvB,CAAf;AACF,eAAO;AAAK,UAAA,GAAG,EAAEF,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoBA,IAApB,oCAAwDK,KAAxD,gBAAsEG,MAAtE,2BAAgGJ,IAAhG,OAAP;AACC,OAJA,CAHH,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbA,EAcA,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,iBAACrB,IAAD;AAAA,iBAAU,MAAI,CAAC0B,UAAL,CAAgB1B,IAAhB,CAAV;AAAA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,CAHF,CADF;AAuBD;;;;EAvDqBjB,KAAK,CAACe,S;;AA8D9Bd,QAAQ,CAAC2C,MAAT,CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.onClick(this.state.value)}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\n\n\n\nclass MeteoPage extends React.Component {\n\n    state = {\n  city: 'Braga',\n  forecast: [],\n  new_city: ''\n  }\n\n  getWeather(city){\n\n    fetch('http://localhost:4000/forecast?city='+this.state.new_city)\n        .then(response => response.json())\n        .then(response => this.setState({ city: response.city, forecast: response.data}))\n        .catch(err => console.error(err));\n\n  }\n\n  getWeathe =  _ => {\n\n      fetch('http://localhost:4000/forecast?city='+this.state.city)\n        .then(response => response.json())\n        .then(response => this.setState({ city: response.city, forecast: response.data}))\n        .catch(err => console.error(err))\n    }\n\n\n\n\n\n  render() {\n    const weather = this.state.forecast;\n\n    return (\n      <div className=\"App\">\n<h1> Meteo APP </h1>\n\n        <div>\n          <h3> Weather forecast for the next 10 days in {this.state.city}</h3>\n\n          {weather.map(function({code, date, day, high, low, text}){\n            const low_1 = Math.round((low-32)*5/9);\n            const high_1 = Math.round((high-32)*5/9);\n          return <div key={date}>On {date} temperatures will be between {low_1}ºC and {high_1}ºC. It's expected {text}. </div>;\n          })\n        }\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <NameForm onClick={(city) => this.getWeather(city)}/>\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nReactDOM.render(\n  <MeteoPage />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}