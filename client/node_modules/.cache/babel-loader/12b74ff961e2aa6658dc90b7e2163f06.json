{"ast":null,"code":"import _objectSpread from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar MeteoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MeteoPage, _React$Component);\n\n  function MeteoPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MeteoPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MeteoPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      city: null,\n      forecast: [],\n      new_city: {\n        name: ' '\n      }\n    };\n\n    _this.getWeather = function (_) {\n      var city = _this.state.new_city.name.city;\n      fetch('http://localhost:4000/forecast?city=' + _this.state.new_city.name).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          city: response.city,\n          forecast: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MeteoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var new_city = this.state.new_city;\n      var weather = this.state.forecast;\n      var sub_city = \"\";\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Meteo APP \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Weather forecast for the next 10 days in \", this.state.city), weather.map(function (_ref) {\n        var code = _ref.code,\n            date = _ref.date,\n            day = _ref.day,\n            high = _ref.high,\n            low = _ref.low,\n            text = _ref.text;\n        var low_1 = Math.round((low - 32) * 5 / 9);\n        var high_1 = Math.round((high - 32) * 5 / 9);\n        return React.createElement(\"div\", {\n          key: date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"On \", date, \" temperatures will be between \", low_1, \"\\xBAC and \", high_1, \"\\xBAC. It's expected \", text, \". \");\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        value: new_city.name,\n        onChange: function onChange(e) {\n          return _this2.setState(_objectSpread({}, new_city, {\n            name: e.target.value\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" Pesquisar\")));\n    }\n  }]);\n\n  return MeteoPage;\n}(React.Component);\n\nReactDOM.render(React.createElement(MeteoPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js"],"names":["React","ReactDOM","MeteoPage","state","city","forecast","new_city","name","getWeather","_","fetch","then","response","json","setState","data","catch","err","console","error","weather","sub_city","map","code","date","day","high","low","text","low_1","Math","round","high_1","e","target","value","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nclass MeteoPage extends React.Component {\n\n\nstate = {\n  city: null,\n  forecast: [],\n  new_city: {\n    name: ' ',\n  }\n\n}\n    componentDidMount(){\n\n\n\n    }\n\n\n\n  getWeather =  _ => {\n    const { city } = this.state.new_city.name;\n      fetch('http://localhost:4000/forecast?city='+this.state.new_city.name)\n        .then(response => response.json())\n        .then(response => this.setState({ city: response.city, forecast: response.data}))\n        .catch(err => console.error(err))\n    }\n\n\n\n\n\n  render() {\n    const { new_city }= this.state;\n    const weather = this.state.forecast;\n    const sub_city = \"\";\n    return (\n      <div className=\"App\">\n<h1> Meteo APP </h1>\n\n        <div>\n          <h3> Weather forecast for the next 10 days in {this.state.city}</h3>\n\n          {weather.map(function({code, date, day, high, low, text}){\n            const low_1 = Math.round((low-32)*5/9);\n            const high_1 = Math.round((high-32)*5/9);\n          return <div key={date}>On {date} temperatures will be between {low_1}ºC and {high_1}ºC. It's expected {text}. </div>;\n          })\n        }\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n\n        <input value={new_city.name} onChange={e => this.setState({...new_city, name: e.target.value})}/>\n        <button onClick={this.getWeather}> Pesquisar</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nReactDOM.render(\n  <MeteoPage />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}