{"ast":null,"code":"import _classCallCheck from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar MeteoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MeteoPage, _React$Component);\n\n  function MeteoPage(props) {\n    var _this;\n\n    _classCallCheck(this, MeteoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MeteoPage).call(this, props));\n\n    _this.getWeather = function (_) {\n      fetch('http://localhost:4000/forecast?city=' + _this.state.weather.city).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          weather: {\n            city: response.city,\n            forecast: response.data\n          }\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.state = {\n      weather: {\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(MeteoPage, [{\n    key: \"render\",\n    value: function render() {\n      var weather = this.state.weather.forecast;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Meteo APP \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \" Weather forecast for the next 10 days in \", this.state.weather.city), weather.map(function (_ref) {\n        var code = _ref.code,\n            date = _ref.date,\n            day = _ref.day,\n            high = _ref.high,\n            low = _ref.low,\n            text = _ref.text;\n        var low_1 = Math.round((low - 32) * 5 / 9);\n        var high_1 = Math.round((high - 32) * 5 / 9);\n        return React.createElement(\"div\", {\n          key: date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"On \", date, \" temperatures will be between \", low_1, \"\\xBAC and \", high_1, \"\\xBAC. It's expected \", text, \". \");\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getWeather(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Click Me!\")));\n    }\n  }]);\n\n  return MeteoPage;\n}(React.Component);\n\nReactDOM.render(React.createElement(MeteoPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js"],"names":["React","ReactDOM","MeteoPage","props","getWeather","_","fetch","state","weather","city","then","response","json","setState","forecast","data","catch","err","console","error","value","map","code","date","day","high","low","text","low_1","Math","round","high_1","handleChange","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass MeteoPage extends React.Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather:{\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''};\n\n  }\n\n\n\n\n\n  getWeather =  _ => {\n\n      fetch('http://localhost:4000/forecast?city='+this.state.weather.city)\n        .then(response => response.json())\n        .then(response => this.setState({weather:{ city: response.city, forecast: response.data}}))\n        .catch(err => console.error(err))\n    }\n\n\n\n\n\n  render() {\n    const weather = this.state.weather.forecast;\n\n    return (\n      <div className=\"App\">\n<h1> Meteo APP </h1>\n\n        <div>\n          <h3> Weather forecast for the next 10 days in {this.state.weather.city}</h3>\n\n          {weather.map(function({code, date, day, high, low, text}){\n            const low_1 = Math.round((low-32)*5/9);\n            const high_1 = Math.round((high-32)*5/9);\n          return <div key={date}>On {date} temperatures will be between {low_1}ºC and {high_1}ºC. It's expected {text}. </div>;\n          })\n        }\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <button  type=\"button\" onClick={this.getWeather()}>Click Me!</button>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nReactDOM.render(\n  <MeteoPage />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}