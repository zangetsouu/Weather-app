{"ast":null,"code":"import _classCallCheck from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar MeteoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MeteoPage, _React$Component);\n\n  function MeteoPage(props) {\n    var _this;\n\n    _classCallCheck(this, MeteoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MeteoPage).call(this, props));\n\n    _this.getWeather = function (_) {\n      if (_this.state.value) fetch('http://localhost:4000/forecast?city=' + _this.state.value).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          weather: {\n            city: response.city,\n            forecast: response.data\n          }\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });else fetch('http://localhost:4000/forecast?city=' + _this.state.weather.city).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          weather: {\n            city: response.city,\n            forecast: response.data\n          }\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n\n      if (_this.state.weather.forecast === 'err') {\n        _this.setState({\n          weather: {\n            forecast: [('code', 'date', 'day', 'high', 'low', 'text')]\n          }\n        });\n\n        _this.setState({\n          err: true\n        });\n      }\n    };\n\n    _this.state = {\n      err: false,\n      weather: {\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    return _this;\n  } //handleChange(event) {\n  //    this.setState({value: event.target.value});\n  //  }\n\n\n  _createClass(MeteoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var err = this.state.err;\n      var weather = this.state.weather.forecast;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" Meteo APP \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Click Me!\")));\n    }\n  }]);\n\n  return MeteoPage;\n}(React.Component);\n\nReactDOM.render(React.createElement(MeteoPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js"],"names":["React","ReactDOM","MeteoPage","props","getWeather","_","state","value","fetch","then","response","json","setState","weather","city","forecast","data","catch","err","console","error","e","target","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass MeteoPage extends React.Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: false,\n      weather:{\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''};\n\n   // this.handleChange = this.handleChange.bind(this);\n\n  }\n\n\n//handleChange(event) {\n//    this.setState({value: event.target.value});\n//  }\n\n  componentDidMount(){\n    this.getWeather();\n  }\n\n  getWeather =  _ => {\n    if(this.state.value)\n      fetch('http://localhost:4000/forecast?city='+this.state.value)\n        .then(response => response.json())\n        .then(response => this.setState({weather:{ city: response.city, forecast: response.data}}))\n        .catch(err => console.error(err));\n      else\n\n      fetch('http://localhost:4000/forecast?city='+this.state.weather.city)\n        .then(response => response.json())\n        .then(response => this.setState({weather:{ city: response.city, forecast: response.data}}))\n        .catch(err => console.error(err));\n\n      if(this.state.weather.forecast === 'err'){\n          this.setState({weather:{forecast: [('code', 'date', 'day', 'high', 'low', 'text')]}})\n          this.setState({err:true});\n        }\n    }\n\n\n\n\n\n  render() {\n    const err = this.state.err;\n    const weather = this.state.weather.forecast;\n\n    return (\n      <div className=\"App\">\n<h1> Meteo APP </h1>\n\n        <div>\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={(e) => this.setState({value:e.target.value})} />\n        </label>\n        <button  type=\"button\" onClick={this.getWeather}>Click Me!</button>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nReactDOM.render(\n  <MeteoPage />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}