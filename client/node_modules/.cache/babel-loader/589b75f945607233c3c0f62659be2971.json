{"ast":null,"code":"import _classCallCheck from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrepinto/Desktop/scytale/my-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar MeteoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MeteoPage, _React$Component);\n\n  function MeteoPage(props) {\n    var _this;\n\n    _classCallCheck(this, MeteoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MeteoPage).call(this, props));\n\n    _this.getWeather = function (_) {\n      if (_this.state.value) fetch('http://localhost:4000/forecast?city=' + _this.state.value).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          weather: {\n            city: response.city,\n            forecast: response.data\n          }\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });else fetch('http://localhost:4000/forecast?city=' + _this.state.weather.city).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          weather: {\n            city: response.city,\n            forecast: response.data\n          }\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.state = {\n      err: false,\n      weather: {\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    return _this;\n  } //handleChange(event) {\n  //    this.setState({value: event.target.value});\n  //  }\n\n\n  _createClass(MeteoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var err = this.state.err;\n      var weather = this.state.weather.forecast;\n      var forecast;\n      var i = 1;\n\n      if (weather === 'err') {\n        forecast = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \" Unable to get weather data! City not found! \");\n      } else {\n        forecast = weather.map(function (_ref) {\n          var code = _ref.code,\n              date = _ref.date,\n              day = _ref.day,\n              high = _ref.high,\n              low = _ref.low,\n              text = _ref.text;\n          var low_1 = Math.round((low - 32) * 5 / 9);\n          var high_1 = Math.round((high - 32) * 5 / 9);\n          var img;\n          if (text == 'Scattered Thunderstorms') img = React.createElement(\"img\", {\n            src: require('./img/scatter_thunder.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          });\n          if (text == 'Thunderstorms') img = React.createElement(\"img\", {\n            src: require('./img/thunder.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n          if (text == 'Mostly Cloudy') img = React.createElement(\"img\", {\n            src: require('./img/cloudy.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n          if (text == 'Cloudy') img = React.createElement(\"img\", {\n            src: require('./img/cloudy.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n          if (text == 'Rain') img = React.createElement(\"img\", {\n            src: require('./img/rain.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n          if (text == 'Showers') img = React.createElement(\"img\", {\n            src: require('./img/showers.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n          if (text == 'Scattered Showers') img = React.createElement(\"img\", {\n            src: require('./img/showers.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n          if (text == 'Partly Cloudy') img = React.createElement(\"img\", {\n            src: require('./img/partly_cloudy.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n          if (text == 'Mostly Sunny') img = React.createElement(\"img\", {\n            src: require('./img/clear.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          });\n          if (text == 'Sunny') img = React.createElement(\"img\", {\n            src: require('./img/clear.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          });\n          if (text == 'Breezy') img = React.createElement(\"img\", {\n            src: require('./img/ice.png'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          });\n          return React.createElement(\"div\", {\n            key: date,\n            className: \"col-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \" \", day, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), date, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), low_1, \"-\", high_1, \"\\xBAC\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), text, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), \" \", img);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headerimg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Meteo APP \")), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Weather forecast for the next 10 days in \", this.state.weather.city), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, forecast)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Click Me!\")));\n    }\n  }]);\n\n  return MeteoPage;\n}(React.Component);\n\nReactDOM.render(React.createElement(MeteoPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andrepinto/Desktop/scytale/my-app-react/src/index.js"],"names":["React","ReactDOM","MeteoPage","props","getWeather","_","state","value","fetch","then","response","json","setState","weather","city","forecast","data","catch","err","console","error","i","map","code","date","day","high","low","text","low_1","Math","round","high_1","img","require","e","target","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass MeteoPage extends React.Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: false,\n      weather:{\n        city: 'Braga',\n        forecast: []\n      },\n      value: ''};\n\n   // this.handleChange = this.handleChange.bind(this);\n\n  }\n\n\n//handleChange(event) {\n//    this.setState({value: event.target.value});\n//  }\n\n  componentDidMount(){\n    this.getWeather();\n  }\n\n  getWeather =  _ => {\n    if(this.state.value)\n      fetch('http://localhost:4000/forecast?city='+this.state.value)\n        .then(response => response.json())\n        .then(response => this.setState({weather:{ city: response.city, forecast: response.data}}))\n        .catch(err => console.error(err));\n      else\n\n      fetch('http://localhost:4000/forecast?city='+this.state.weather.city)\n        .then(response => response.json())\n        .then(response => this.setState({weather:{ city: response.city, forecast: response.data}}))\n        .catch(err => console.error(err));\n\n\n    }\n\n\n\n\n\n  render() {\n    const err = this.state.err;\n    const weather = this.state.weather.forecast;\n    let forecast;\n    let i=1;\n    if(weather === 'err'){\n      forecast = <div> Unable to get weather data! City not found! </div>\n    } else{\n\n      forecast = weather.map(function({code, date, day, high, low, text}){\n\n\n            const low_1 = Math.round((low-32)*5/9);\n            const high_1 = Math.round((high-32)*5/9);\n            let img;\n\n            if(text=='Scattered Thunderstorms')\n              img = <img src={require('./img/scatter_thunder.png')}/>\n            if(text=='Thunderstorms')\n              img = <img src={require('./img/thunder.png')}/>\n            if(text=='Mostly Cloudy')\n              img = <img src={require('./img/cloudy.png')}/>\n            if(text=='Cloudy')\n              img = <img src={require('./img/cloudy.png')}/>\n            if(text=='Rain')\n              img = <img src={require('./img/rain.png')}/>\n            if(text=='Showers')\n              img = <img src={require('./img/showers.png')}/>\n            if(text=='Scattered Showers')\n              img = <img src={require('./img/showers.png')}/>\n            if(text=='Partly Cloudy')\n              img = <img src={require('./img/partly_cloudy.png')}/>\n            if(text=='Mostly Sunny')\n              img = <img src={require('./img/clear.png')}/>\n            if(text=='Sunny')\n              img = <img src={require('./img/clear.png')}/>\n            if(text=='Breezy')\n              img = <img src={require('./img/ice.png')}/>\n\n          return <div key={date} className='col-sm'> {day}<br/><br/>{date}<br/><br/>{low_1}-{high_1}ºC<br/><br/>{text} <br/> {img}</div>;}\n          )\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"headerimg\">\n        <br/>\n        <br/>\n        <br/>\n          <h1> Meteo APP </h1>\n        </div>\n\n        <div className=\"col-6\">\n          <h3> Weather forecast for the next 10 days in {this.state.weather.city}</h3>\n          <div  className=\"container\">\n            <div className=\"row\">\n          {forecast}\n            </div>\n          </div>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n\n\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={(e) => this.setState({value:e.target.value})} />\n        </label>\n        <button  type=\"button\" onClick={this.getWeather}>Click Me!</button>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\nReactDOM.render(\n  <MeteoPage />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}